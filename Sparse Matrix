#include<stdio.h>

void main() {
    int r, c, i, j, k = 1;  
    int a[50][50], b[50][3];  // a[] is for the original matrix, b[] is for the sparse matrix representation
   
    printf("Enter the number of rows and columns in the sparse matrix: ");
    scanf("%d %d", &r, &c);
    
    printf("Enter the matrix elements: ");
    for(i = 0; i < r; i++) {
        for(j = 0; j < c; j++) {
            scanf("%d", &a[i][j]);
        }
    }

    printf("\nOriginal matrix: ");
    for(i = 0; i < r; i++) {
        printf("\n");
        for(j = 0; j < c; j++) {
            printf("%d \t", a[i][j]);
        }
    }

    // Initialize the first row of the sparse matrix representation
    b[0][0] = r;  // Row count
    b[0][1] = c;  // Column count
    b[0][2] = 0;  // To store the count of non-zero elements (this will be updated below)

    // Traverse the matrix and fill the sparse matrix
    for(i = 0; i < r; i++) {
        for(j = 0; j < c; j++) {
            if (a[i][j] != 0) {  // If the element is non-zero
                b[k][0] = i;  // Store the row index
                b[k][1] = j;  // Store the column index
                b[k][2] = a[i][j];  // Store the value
                k++;  // Increment the counter for non-zero elements
            }
        }
    }

    // Update the count of non-zero elements in the first row of b
    b[0][2] = k - 1;

    printf("\n\nSparse matrix representation is: ");
    printf("\nROW \tCOLUMN \tVALUE");
    for(i = 0; i < k; i++) {
        printf("\n");
        for(j = 0; j < 3; j++) {
            printf("%d \t", b[i][j]);
        }
    }
}
